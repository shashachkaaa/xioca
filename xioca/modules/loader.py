import os
import logging
from pyrogram import Client, types
from .. import loader, utils, __system_mod__

@loader.module(name="Loader", author="sh1tn3t | shashachkaaa")
class LoaderMod(loader.Module):
    """–ó–∞–≥—Ä—É–∑—á–∏–∫ –º–æ–¥—É–ª–µ–π"""
    
    async def loadmod_cmd(self, app: Client, message: types.Message):
        """–ó–∞–≥—Ä—É–∑–∏—Ç—å –º–æ–¥—É–ª—å –ø–æ —Ñ–∞–π–ª—É. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: <—Ä–µ–ø–ª–∞–π –Ω–∞ —Ñ–∞–π–ª>"""
        reply = message.reply_to_message
        file = (
            message
            if message.document
            else reply
            if reply and reply.document
            else None
        )

        if not file:
            return await utils.answer(
                message, "<emoji id=5210952531676504517>‚ùå</emoji> <b>–ù–µ–æ–±—Ö–æ–¥–∏–º –æ—Ç–≤–µ—Ç –Ω–∞ —Ñ–∞–π–ª</b>"
            )

        modules_dir = "modules"
        
        file_path = os.path.join(modules_dir, file.document.file_name)
        await file.download(file_path)

        try:
            with open(f"xioca/{file_path}", "r", encoding="utf-8") as f:
                module_source = f.read()
        except UnicodeDecodeError:
            return await utils.answer(
                message, "<emoji id=5210952531676504517>‚ùå</emoji> <b>–ù–µ–≤–µ—Ä–Ω–∞—è –∫–æ–¥–∏—Ä–æ–≤–∫–∞ —Ñ–∞–π–ª–∞</b>"
            )
        except Exception as e:
            logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞: {e}")
            return await utils.answer(
                message, "<emoji id=5210952531676504517>‚ùå</emoji> <b>–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å —Ñ–∞–π–ª</b>"
            )

        module_name = await self.all_modules.load_module(module_source)
        if module_name is True:
            return await utils.answer(
                message, "<emoji id=5206607081334906820>‚úîÔ∏è</emoji> <b>–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã. –¢—Ä–µ–±—É–µ—Ç—Å—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞</b>"
            )

        if not module_name:
            return await utils.answer(
                message, "<emoji id=5210952531676504517>‚ùå</emoji> <b>–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –º–æ–¥—É–ª—å. –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ —Å–º–æ—Ç—Ä–∏ –≤ –ª–æ–≥–∞—Ö</b>"
            )
            
        module = self.all_modules.get_module(module_name.lower())
        if not module:
            return await utils.answer(
                message, f"<emoji id=5210952531676504517>‚ùå</emoji> <b>–ú–æ–¥—É–ª—å</b> ¬´<code>{module_name}</code>¬ª <b>–Ω–µ –Ω–∞–π–¥–µ–Ω</b>"
            )

        prefix = self.db.get("xioca.loader", "prefixes", ["."])[0]
        bot_username = (await self.bot.me()).username

        command_descriptions = "\n".join(
            f"<emoji id=5471978009449731768>üëâ</emoji> <code>{prefix + command}</code>\n"
            f"    ‚ï∞ {module.command_handlers[command].__doc__ or '–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è –¥–ª—è –∫–æ–º–∞–Ω–¥—ã'}"
            for command in module.command_handlers
        )
        
        inline_descriptions = "\n".join(
            f"<emoji id=5471978009449731768>üëâ</emoji> <code>@{bot_username + ' ' + command}</code>\n"
            f"    ‚ï∞ {module.inline_handlers[command].__doc__ or '–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è –¥–ª—è –∫–æ–º–∞–Ω–¥—ã'}"
            for command in module.inline_handlers
        )

        header = (
            (
                f"<b><emoji id=5237922302070367159>‚ù§Ô∏è</emoji> –ê–≤—Ç–æ—Ä:</b> <code>{module.author}</code>\n" if module.author else ""
            ) + (
                f"<b><emoji id=5226929552319594190>0Ô∏è‚É£</emoji> –í–µ—Ä—Å–∏—è:</b> <code>{module.version}</code>\n" if module.version else ""
            ) + (
                f"\n<b><emoji id=5197269100878907942>‚úçÔ∏è</emoji> –û–ø–∏—Å–∞–Ω–∏–µ:</b>\n"
                f"    ‚ï∞ {module.__doc__ or '–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è –¥–ª—è –º–æ–¥—É–ª—è'}\n\n"
            )
        )

        return await utils.answer(
            message, f"<emoji id=5206607081334906820>‚úîÔ∏è</emoji> <b>–ú–æ–¥—É–ª—å \"<code>{module_name}</code>\" –∑–∞–≥—Ä—É–∂–µ–Ω</b>\n\n" + header + command_descriptions + "\n" + inline_descriptions
        )
    
    async def unloadmod_cmd(self, app: Client, message: types.Message, args: str):
        """–í—ã–≥—Ä—É–∑–∏—Ç—å –º–æ–¥—É–ª—å. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: unloadmod <–Ω–∞–∑–≤–∞–Ω–∏–µ –º–æ–¥—É–ª—è>"""
        module_name, text = utils.get_module_name(message)
        
        if module_name.lower() in __system_mod__:
            return await utils.answer(
                message, f"<emoji id=5210952531676504517>‚ùå</emoji> <code>{module_name}</code> <b>—è–≤–ª—è–µ—Ç—Å—è —Å–∏—Å—Ç–µ–º–Ω—ã–º –º–æ–¥—É–ª–µ–º, –µ–≥–æ –≤—ã–≥—Ä—É–∑–∏—Ç—å –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ!</b>"
            )
        
        self.all_modules.unload_module(module_name)
        os.remove(f"xioca/modules/{module_name}.py")

        return await utils.answer(
            message, f"<emoji id=5206607081334906820>‚úîÔ∏è</emoji> <b>–ú–æ–¥—É–ª—å \"<code>{module_name}</code>\" –≤—ã–≥—Ä—É–∂–µ–Ω</b>\n\n{text}"
        )

    async def ml_cmd(self, app: Client, message: types.Message, args: str):
        """–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –º–æ–¥—É–ª–µ–º"""
        if not args:
            return await utils.answer(
                message, "<emoji id=5210952531676504517>‚ùå</emoji> <b>–ù–µ—Ç –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤</b>"
            )
        
        module_name, text = utils.get_module_name(message)
        
        try:
            file_path = f"xioca/modules/{module_name}.py"
            await utils.answer(
                message,
                chat_id=message.chat.id,
                document=True,
                response=file_path,
                caption=(
                    f"<emoji id=5433653135799228968>üìÅ</emoji> <b>–§–∞–π–ª</b> <code>{module_name}</code>\n\n"
                    f"<emoji id=5195083327597456039>üåô</emoji> <code>.loadmod</code> <b>–≤ –æ—Ç–≤–µ—Ç –Ω–∞ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ, —á—Ç–æ–±—ã —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –º–æ–¥—É–ª—å</b>\n\n"
                    f"{text}"
                )
            )
        except Exception as e:
            logging.error(e)
            await utils.answer(
                message, "<emoji id=5210952531676504517>‚ùå</emoji> <b>–ú–æ–¥—É–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω</b>"
            )